on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

name: Node Project `my-app` CI on ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.ACTIONS_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: eks-fraud-det
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
    - name: Update kube config
      run: aws eks update-kubeconfig --name fraud-dection --region ap-south-1      
    - name: Update deployment secrets
      run: |
          cat << EOF >> /tmp/.env
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region_name=${{ secrets.REGION_NAME }}
          EOF     
          kubectl delete secret eks-fraud-det-env
          kubectl create secret generic eks-fraud-det-env --from-env-file=/tmp/.env
    - name: Deploy image to Amazon EKS
      run: |
        echo "=================================="
        echo $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "=================================="
        kubectl set image deployment/fraud-deployment fraud-dec=$ECR_REGISTRY/$ECR_REPOSITORY:latest
    - name: Wait for rollout to finish
      run: |
        kubectl rollout status deployment/fraud-deployment
